{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Section/Section.module.scss","components/Filter/Filter.module.scss","components/Header/Header.module.scss","components/ContactList/ContactList.module.scss","redux/actions.js","redux/reducer.js","redux/store.js","components/Header/Header.jsx","components/Section/Section.jsx","redux/operations.js","components/ContactForm/ContactForm.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","action","some","name","alert","getNewContact","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","Header","title","children","className","s","AppHeader","Section","Title","ContentWrapper","axios","defaults","baseURL","Form","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","e","currentTarget","value","reset","formatPhoneNumber","match","replace","nameInputId","shortid","generate","numberInputId","onSubmit","preventDefault","a","contact","post","data","console","log","addContact","Group","type","placeholder","pattern","required","onChange","Btn","getFilter","getContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useSelector","contactList","map","contactListItem","contactBtn","btn","onClick","delete","deleteContact","Filter","FilterLabel","htmlFor","FilterInput","target","App","useEffect","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.059293cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Btn\":\"ContactForm_Btn__3RNXk\",\"Group\":\"ContactForm_Group__2kBuf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__CqcNT\",\"Title\":\"Section_Title__3JdV3\",\"ContentWrapper\":\"Section_ContentWrapper__H17GO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__3kH4y\",\"FilterLabel\":\"Filter_FilterLabel__31TZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__1safz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__9FkvI\",\"contactBtn\":\"ContactList_contactBtn__1j41G\",\"btn\":\"ContactList_btn__LjK5L\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/filter');\n\nexport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from 'redux/actions';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nfunction getNewContact(state, { payload }) {\n  const existContact = state.some(({ name }) => name === payload.name);\n  return !existContact ? [...state, payload] : alert(`${payload.name} is already in the contact`);\n}\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, action) => getNewContact(state, action),\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from 'redux/reducer';\n\nconst middleware = getDefaultMiddleware => [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport { store };\n","import PropTypes from 'prop-types';\nimport s from 'components/Header/Header.module.scss';\nfunction Header({ title, children }) {\n  return (\n    <header className={s.AppHeader}>\n      <div className=\"container\">\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={`container ${s.Section}`}>\n      <h2 className={s.Title}>{title}</h2>\n      <div className={s.ContentWrapper}>{children}</div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from 'redux/actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    console.log(data);\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    console.log(data);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport shortid from 'shortid';\n// import { FaUser, FaMobileAlt } from 'react-icons/fa';\nimport s from 'components/ContactForm/ContactForm.module.scss';\nimport { addContact } from 'redux/operations';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        return setName(value);\n\n      case 'number':\n        return setNumber(value);\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addContact(name, formatPhoneNumber(number)));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const formatPhoneNumber = number => {\n    //Filter only numbers from the input\n    let cleaned = ('' + number).replace(/\\D/g, '');\n    //Check if the input is of correct length\n    let match = cleaned.match(/^(\\d{3})(\\d{2})(\\d{2})$/);\n\n    return match ? +match[1] + '-' + match[2] + '-' + match[3] : number;\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className={s.Form} onSubmit={handleSubmit}>\n      <div className={s.Group}>\n        {/* <label htmlFor={nameInputId}>Name</label> */}\n        {/* <FaUser style={{ position: 'absolute', top: '22px', left: '5px' }} size=\"13px\" /> */}\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          id={nameInputId}\n          onChange={handleChange}\n        />\n\n        <div className=\"bar\"></div>\n      </div>\n\n      <div className={s.Group}>\n        {/* <label htmlFor={numberInputId}>Number</label> */}\n        {/* <FaMobileAlt\n          style={{ position: 'absolute', top: '20px', left: '5px' }}\n          size=\"calc(14px + 0.3vmin)\"\n        /> */}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          id={numberInputId}\n          onChange={handleChange}\n        />\n\n        <div className=\"bar\"></div>\n      </div>\n      <button className={s.Btn} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\n// With import { connect } from 'react-redux';\n\n/** const mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form); */\n","import { createSelector } from 'reselect';\n\nexport const getFilter = state => state.contacts.filter;\nexport const getContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n});\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n// };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { ImBin } from 'react-icons/im';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\n\nimport s from './ContactList.module.scss';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  return (\n    <table className={s.contactList}>\n      <tbody>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <tr className={s.contactListItem} id={id} key={id}>\n              <td className={s.name}>{name}</td>\n              <td className={s.number}>{number}</td>\n              <td className={s.contactBtn}>\n                <button className={s.btn} type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                  <ImBin />\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\n// With import { connect } from 'react-redux';\n\n/**\n  const getFilterContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilterContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n */\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/actions';\nimport { getFilter } from 'redux/selectors';\nimport s from 'components/Filter/Filter.module.scss';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={s.FilterLabel} htmlFor=\"\">\n        Filter contacts by name\n        <input\n          className={s.FilterInput}\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n\n// With import { connect } from 'react-redux';\n\n/**\n const mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n */\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Header from 'components/Header';\nimport Section from 'components/Section';\nimport Form from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/operations';\n// import { useLocalStorage } from 'hooks/useLocalStorage';\nimport 'styles/shared.scss';\n\nconst App = () => {\n  // const [contacts, setContacts] = useLocalStorage('contacts', initialContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Header title={'PhoneBook'}>\n        <Filter />\n      </Header>\n      <Section title={'Contacts'}>\n        <Form />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n\n// const [contacts, setContacts] = useState(\n//   JSON.parse(window.localStorage.getItem('contacts:')) ?? initialContacts,\n// );\n// const [filter, setFilter] = useState('');\n\n// useEffect(() => {\n//   window.localStorage.setItem('contacts:', JSON.stringify(contacts));\n// }, [contacts]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}